import {
  Entity, PrimaryGeneratedColumn, Column, CreateDateColumn, UpdateDateColumn,
  OneToMany, Index,
} from 'typeorm';
import { StandardEnum } from '../../types/standard.enum';
import { DocumentEntity } from '../../documents/entities/document.entity';

@Entity('products')
// Consider making productName unique per standard if that's a business rule.
// @Index(['productName', 'standard'], { unique: true }) 
export class ProductEntity {
  @PrimaryGeneratedColumn('uuid')
  id: string;

  @Column()
  productName: string;

  @Column({
    type: 'enum',
    enum: StandardEnum,
  })
  standard: StandardEnum;

  @CreateDateColumn()
  registrationDate: Date;

  @Column({ type: 'text', nullable: true })
  comment?: string;

  // ESPD Specific
  @Column({ nullable: true })
  espdClassifier?: string; // e.g., "01"

  @Column({ nullable: true })
  @Index() // Index for faster lookup if generating sequential parts based on it
  espdProductSequentialPart?: string; // e.g., "001" - Generated by backend if not provided

  @Column({ nullable: true, unique: true }) // Full designations should be unique
  @Index()
  fullEspdBaseDesignation?: string; // e.g., "АНЦП.01001" - Formed by backend

  // ESKD Specific
  @Column({ nullable: true })
  eskdOrgCode?: string; // e.g., "АБВГ"

  @Column({ nullable: true })
  eskdClassChar?: string; // e.g., "123456"

  @Column({ nullable: true })
  @Index()
  eskdBaseSerialNum?: string; // e.g., "000001" - Generated by backend if not provided

  @Column({ nullable: true, unique: true })
  @Index()
  fullEskdBaseDesignation?: string; // e.g., "АБВГ.123456.000001" - Formed by backend

  // GOST 34 Specific
  @Column({ nullable: true })
  gost34OrgCode?: string; // e.g., "1234567890123" (ОГРН)

  @Column({ nullable: true })
  gost34ClassCode?: string; // e.g., "АС"

  @Column({ nullable: true })
  @Index()
  gost34SystemRegNum?: string; // e.g., "001" - Generated by backend if not provided

  @Column({ nullable: true, unique: true })
  @Index()
  fullGost34BaseDesignation?: string; // e.g., "1234567890123.АС.001" - Formed by backend

  @Column({ nullable: true })
  bitrixTaskId?: string;

  @CreateDateColumn()
  createdAt: Date;

  @UpdateDateColumn()
  updatedAt: Date;

  @OneToMany(() => DocumentEntity, (document) => document.product, { cascade: false }) // onDelete behavior handled by DB or service layer logic
  documents: DocumentEntity[];
}
